<template lang="wxml" minapp="wepy">
  <!-- 搜索条 -->
  <view class="top-search-panel">
    <view class="search_read_only">
      <!-- <image src="../../images/home/1xs1.png" mode="widthFix" class="img-xs" lazy-load="false"></image> -->
      <icon class="order icon-d"></icon>
      <!-- <icon class="address icon-d"></icon> -->
      <block wx:if="{{locationScope}}">
        <view class="flex-item " @tap="toLatlng">{{lnglat.addrInfo}}
          <icon class="error arrow"></icon>
        </view>
        <view class="flex-item-2 ">
          <icon class="icon-daohang icon-d"></icon><text class="weak xxs" style="font-weight:bold;"> {{lnglat.distanceInfo}}</text></view>
        <view class="flex-item-0 " @tap="scan()">
          <icon class="scan xs" style="font-weight:bold;color:#999999;"></icon>
        </view>
      </block>
      <block wx:else>
        <button size="mini" plain="true" open-type="openSetting" bindopensetting="handler">请授权位置信息,为您导航及配送.</button>
      </block>
    </view>
    <view class="search_read_only">
      <navigator class="search_content" open-type="navigate" url="/pages/goods/search">
        <i class="iconfont icon-search"></i>
        <view class="search_input">搜索</view>
      </navigator>
    </view>
    <!-- <wux-notice-bar wux-class="my-bar" loop speed="100" mode="closable" content=" {{distanceInfo}}" /> -->
  </view>
  <!-- /搜索条 -->
</template>

<script>
  import wepy from 'wepy';
  // import _ from 'lodash/core';
  // import QQMapWX from '@/utils/qqmap-wx-jssdk';
  // import api from '@/api/config';
  import QQmapMixin from '@/mixins/qqmap';
  import {
    connect
  } from 'wepy-redux';
  import store from '@/store/utils';
  @connect({
    lnglat: store.get('lnglat')
  })
  export default class SearchBar extends wepy.component {
    props = {
      param: {}
    };
    data = {
      locationScope: false,
      qqmapsdk: {},
      address: '',
      distanceInfo: ''
      // city_code: ''
    };
    mixins = [QQmapMixin];
    methods = {
      handler: function(e) {
        if (!e.detail.authSetting['scope.userLocation']) {
          this.locationScope = false;
        } else {
          this.locationScope = true;
          this.getLocation();
        }
      },
      scan() {
        let url;
        // 只允许从相机扫码
        wx.scanCode({
          onlyFromCamera: true,
          success(res) {
            console.log(res);
            url = res.path;
            // 这个上传后还得改
            url = '/pages/goods' + url.substring(5);
            wx.navigateTo({
              url: url
            });
          }
        });
      },
      toLatlng() {
        wepy.navigateTo({
          url: '/pages/common/lnglat'
        });
      }
    };
    // /**
    //  * 获取本机定位
    //  */
    // getLocation() {
    //   var that = this;
    //   wx.getLocation({
    //     type: 'gcj02',
    //     success: function(res) {
    //       that.locationScope = true;
    //       that.$apply();
    //       const latitude = res.latitude;
    //       const longitude = res.longitude;
    //       that.getLocationInfo(latitude, longitude);
    //     },
    //     fail: function(res) {
    //       console.log('拒绝授权');
    //       that.locationScope = false;
    //     }
    //   });
    // }
    // /**
    //  * 获取经纬度附近地址信息
    //  */
    // getLocationInfo(lat, lng) {
    //   let that = this;
    //   // 调用接口
    //   this.qqmapsdk.reverseGeocoder({
    //     // location: lat + ',' + lng,
    //     //   118.746971,32.221862
    //     location: '32.221862,118.746971',
    //     get_poi: 1,
    //     // 配置页面个数 必须带当前页面
    //     poi_options: 'page_size=5;page_index=1',
    //     success: function(res) {
    //       let r = res.result;
    //       let addr = r.pois[0].title;
    //       store.save('lnglat', {
    //         ...that.lnglat,
    //         city: r.ad_info.city,
    //         pois: r.pois,
    //         currentAddr: addr
    //       });
    //       if (addr.length > 5) {
    //         addr = addr.substring(0, 5) + '...';
    //       }
    //       that.address = addr;
    //       // 现在不用城市了 改用地区码了 因为与后台的城市码不同
    //       // that.city_code = r.ad_info.city_code;
    //       let shops = api.getShopLocation({
    //         adcode: r.ad_info.adcode
    //       });
    //       shops.then(data => {
    //         // console.log(data, '<<<<<<<<<<<<<<<');
    //         that.getShopDistance(lat, lng, data);
    //         // that.getShopDistance('32.221862', '118.746971', data);
    //       });
    //       that.$apply();
    //     },
    //     fail: function(res) {
    //       console.log(res);
    //     }
    //   });
    // }
    // /**
    //  * 获取到达门店距离
    //  */
    // getShopDistance(lat, lng, shopList) {
    //   let that = this;
    //   this.qqmapsdk.calculateDistance({
    //     //   mode: 'driving', // 行走模式 默认为 walking 步行距离好像更近些和精确 驾车可能存在掉头停靠问题
    //     from: lat + ',' + lng,
    //     //   to: '40.2155294611,116.2230294943',
    //     to: shopList,
    //     success: res => {
    //       // console.log(res);
    //       let list = res.result.elements;
    //       list = list.sort((a, b) => {
    //         return a.distance - b.distance;
    //       });
    //       // console.log(list);
    //       // 大于多少公里就不要显示了 哦 目前只有南京显示 看看米和公里做个转换 小于公里显示米 如果在门店里 怎么显示
    //       // 应该做个显示转换的方法
    //       that.formatDistance(list[0].distance);
    //       that.getShops(shopList, list);
    //       // that.distance = list[0].distance;
    //       // that.$apply();
    //     },
    //     fail: res => {
    //       console.log(res);
    //     }
    //   });
    // }
    // /**
    //  * 距离转换
    //  * 如何缓存这几个列表  还有这几个方法不要放在search里 应该放到一个文件里  好像不行 这种callback不能放到外面 而且下面信息和页面结合太深了
    //  */
    // formatDistance(distance) {
    //   let info;
    //   let dis = distance;
    //   if (distance < 1000) {
    //     info = distance + '米';
    //   } else {
    //     distance = parseInt(distance / 1000);
    //     info = distance + 'km';
    //   }
    //   // console.log(info)
    //   this.distanceInfo = dis > 100 ? `您距离最近的门店: ${info}` : '';
    //   this.$apply();
    //   let r = dis > 100 ? `您距离门店: ${info}` : '';
    //   return r;
    // }
    // /**
    //  * 获得门店列表
    //  */
    // getShops(shops, dists) {
    //   for (let i in shops) {
    //     let lat = parseFloat(shops[i].latitude);
    //     let lng = parseFloat(shops[i].longitude);
    //     let r = _.find(dists, {
    //       to: {
    //         lat: lat,
    //         lng: lng
    //       }
    //     });
    //     shops[i]['distance'] = this.formatDistance(r.distance);
    //   }
    //   shops = _.sortBy(shops, 'distance');
    //   // console.log(shops)
    //   store.save('lnglat', {
    //     ...this.lnglat,
    //     shops: shops
    //   });
    // }
    async onLoad() {
      // 实例化API核心类
      // this.qqmapsdk = new QQMapWX({
      //   key: '6QIBZ-NHXR3-KYO3T-YZAGT-4ADW6-NTBF5'
      // });
      // store.save('lnglat', {
      //   qqmapsdk: this.qqmapsdk
      // });
      // this.$apply();
      this.getLocation();
    }
  }
</script>

<style lang="scss">
  @import '../../styles/base'; // 只有引入才能使用变量 而且因为base引入了variable所以就不用引入
  @import '../../styles/variable'; // 只有引入才能使用变量 而且因为base引入了variable所以就不用引入
  .search_address {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50rpx;
    color: #999; // width: 500rpx;
    flex-grow: 1;
    background: #efefee;
    padding: 0 30rpx;
    width: 650rpx;
    height: 55rpx; // margin: 0 auto;
    font-weight: bold;
  }
  .arrow {
    color: $color-normal;
    font-size: $text-xs;
  }
  .icon-d {
    font-size: $text-sm;
    font-weight: bold;
  }
  .flex-item {
    flex-grow: 1;
  }
  .flex-item-0 {
    flex-grow: 0;
  }
  .flex-item-2 {
    flex-grow: 2;
  }
  .search_read_only {
    align-items: center;
    padding: 0 20rpx;
    display: flex;
    justify-content: space-around;
    margin: 0 auto; // width: 650rpx;
    margin-top: 15rpx;
    margin-bottom: 10rpx;
    .search_content {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 10rpx;
      color: #999; // width: 500rpx;
      flex-grow: 1;
      background: #efefef;
      padding: 0 300rpx;
      height: 55rpx; // margin: 0 auto;
      font-weight: bold;
      .search_input {
        font-size: 26rpx;
        width: 100%;
      }
    }
    .icon-search {
      font-size: 40rpx;
    }
    .icon-message {
      font-size: 50rpx;
    }
  }
  .top-search-panel {
    // @extend .btn-panel-top;
    // position: fixed;
    // top: 0;
    left: 0;
    right: 0;
    z-index: 99; // width: 100%;
    background: #fff; //   background: linear-gradient(
    //     to bottom,
    //     rgba(12, 12, 12, 10),
    //     rgba(255, 0, 0, 0)
    //   );
    .search_content {
      background: rgba(0, 0, 0, 0.1);
      border: 1px solid #efefee;
      .icon-search,
      .search_input {
        color: #999;
      }
    }
    .message {
      display: block;
      text-align: center;
      margin-left: 20rpx;
    }
    .doc {
      font-size: 16rpx;
      display: block;
    }
  }
  .img-xs {
    width: 110rpx;
    margin-right: 20rpx;
  }
  .my-bar {
    font-size: $text-form !important;
    height: 50rpx !important;
    line-height: 50rpx !important;
  }
</style>
