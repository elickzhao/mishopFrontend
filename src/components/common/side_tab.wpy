<template>
  <scroll-view class="side-tab" scroll-y>
    <block wx:for="{{tab.list}}" wx:key="id">
      <view class="tab-item {{item.id == tab.selectedId ? 'tab-item-seleted' : ''}}" @tap="switchTab({{item.id}})" >
        <text>{{item.name}}</text>
        <view class="weui-badge tab-num" wx:if="{{item.count > 0}}">{{item.count}}</view>
      </view>
    </block>
  </scroll-view>
</template>


<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import store from '@/store/utils';
@connect({
  rootCate: store.get('rootCate')
})
export default class SideTab extends wepy.component {
  props = {
    tab: {
      twoWay: true
    },
    key: String
  };
  data = {};
  methods = {
    switchTab(selectedId) {
      // 最初测试 但因为耦合了放弃
      // let r = this.rootCate;
      // r.selectedId = selectedId;
      // store.save('rootCate', r);
      // 最终写法
      this.tab.selectedId = selectedId;
      // 因为把store指向这里 这里还是双向绑定 toway 结果只要上面一句就行了 下面保存干脆不用写 这也太方便了 不过有个地方不明白 为什么 saveMeta 也执行了 难道是getRootCateTopLevel执行了一遍?
      console.log(this.rootCate, '>>>我是RootCate');
      // store.save(this.key, this.tab);
      // store.saveMeta(this.key)
      // this.$emit('change', selectedId);
    }
  };
  watch = {
    rootCate(newValue, oldValue) {
      console.log(`num value: ${oldValue} -> ${newValue}`);
      console.log(newValue);
    }
  };
  events = {};
  onLoad() {}
}
</script>

<style lang="scss">
@import '../../styles/variable';

.side-tab {
  // border-right: $border;
  width: 180rpx;
  min-width: 180rpx;
  height: 100%;

  .tab-item {
    position: relative;
    height: 110rpx;
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: #f5f5f5;
    border-left: 8rpx solid #f5f5f5;
    // border-bottom: $border;
    padding-left: 20rpx;
    text {
      color: $color-dimgray;
    }
    .tab-num {
      position: absolute;
      right: 5px;
      top: 5px;
    }
  }

  .tab-item-seleted {
    border-left: 4px solid $color-primary;
    background-color: #fff;
    text {
      color: $color-primary;
      font-weight: bold;
    }
  }
}
</style>
