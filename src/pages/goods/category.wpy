<template>
  <view class="wrapper">
    <view class="top">
      <SearchBar></SearchBar>
    </view>
    <view class="sidebar">
      <SideTab :tab.sync="rootcateList" key="rootCate" />
    </view>
    <view class="main">
      <ImageBox :list.sync="childcateList"></ImageBox>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import api from '@/api/goods';
import SearchInitMixin from '@/mixins/search_init';
import BaseMixin from '@/mixins/base';
import SearchBar from '@/components/common/nav_search_bar';
import SideTab from '@/components/common/side_tab';
import ImageBox from '@/components/common/image_box';
import store from '@/store/utils';
@connect({
  searchKeyword: store.get('searchKeyword'),
  cateCode: store.get('cateCode'),
  rootCate: store.get('rootCate')
})
export default class Category extends wepy.page {
  config = {
    navigationBarTitleText: '分类'
  };
  components = {
    SearchBar: SearchBar,
    SideTab: SideTab,
    ImageBox: ImageBox
  };
  data = {
    imgUrl: '',
    scrollTop: 100,
    windowHeight: 0,
    list: {},
    // 一级分类数据
    rootcateList: {},
    // 二级三级分类数据
    childcateList: {}
  };
  mixins = [BaseMixin, SearchInitMixin];
  // 获取一级分类
  async getRootCateTopLevel() {
    if (!store.exists('rootCate')) {
      const json = await api.getRootCateTopLevel();
      // 放到页面变量 避免 rootCate 二次请求无法监视的bug
      this.rootcateList = json
      this.$apply()
      store.save('rootCate', json);
      store.saveMeta('rootCate');
    }
    this.$apply();
  }
  // 获取二级分类
  async getChildCate(rootCateCode) {
    // console.log(this.childcateList, 'tab 二级分类请求...........')
    const json = await api.getChildGoodsCatetoryList({
      cat_id: rootCateCode
    });
    this.childcateList = json;
    this.$apply();
  }
  async onLoad() {
    // this.dd(); // 这个mixin里有redux 所以会报错 // 之后发现只要去掉 wepy-redux 和 connect 只保留store 就可以用了 而显示redux在加载mixin的页面里注册
    // let a = { serverCode: 1, message: '我错了' };
    // this.hasError(a);
    // await this.getRootCateTopLevel();
    this.imgUrl = this.$parent.globalData.appName;
    this.$apply();
  }
  async onShow() {
    await this.getRootCateTopLevel();
    await this.getChildCate(this.rootcateList.selectedId);
  }
  watch = {
    // 这个监视是不行的 rootCate 是这个redux 当再次请求后 这个redux的地址好像就变了 这样就监视不了
    // 会造成子栏目点击后无法获得  现在做的是把每次请求后都放到一个页面的变量里 这样就没问题了
    // async rootCate() {
    //   await this.getChildCate(this.rootCate.selectedId);
    // }
    async rootcateList() {
      await this.getChildCate(this.rootcateList.selectedId);
    }
  };
  computed = {};
  methods = {};
  events = {};
}
</script>

<style lang="less">
.wrapper {
  height: 100%;
  display: grid;
  grid-template-columns: 180rpx 1fr;
  grid-template-rows: 120rpx 1fr;
}
.top {
  // background-color: antiquewhite;
  grid-column-start: 1;
  grid-column-end: 4;
}
.sidebar {
  // background-color: gray;
}
.main {
  background-color: white;
}
</style>
