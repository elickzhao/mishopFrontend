<!--地址管理-->
<template>
  <view class="address">
    <repeat for="{{addressList}}"  index="index" item="item">
      <view class="list_box">
        <SwipeDelete :swipeData="item" @delItem.user="handleDelItem">
          <view class="address_list" @tap="tapSelAddress" data-id="{{item.id}}">
            <view class="title">
              <view class="address-name-phone">
                <text class="address-name">{{item.name}}</text>
                <text class="address-phone">{{item.tel}}</text>
              </view>
              <view class="active_address">
                <text class="defult" wx:if="{{item.is_default==1}}"> [默认]</text> {{item.address_xq}}
              </view>
            </view>
            <view class="arrow" @tap.stop="edit" data-id="{{item.id}}"><i class="iconfont icon-edit"></i></view>
          </view>
        </SwipeDelete>
      </view>
    </repeat>
  </view>
  <view class="add_wrap2">
    <block wx:if="{{addressList.length < 1}}">
      <button class="type_green" bindtap="addwechat">使用微信地址</button>
    </block>
  </view>
  <view class="add_wrap">
    <button type="warn" bindtap="add">新增地址</button>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/addresses';
import { isExist } from '@/utils/Common';
import SwipeDelete from '@/components/common/wepy-swipe-delete';
import BaseMixin from '@/mixins/base';
import { connect } from 'wepy-redux';
// import { initAddress, initAddressAsync } from '@/store/actions';
import { initAddress, saveAddress, changeAddress } from '@/store/actions';
@connect({
  addressList(state) {
    return state.address.list;
  }
})
export default class Address extends wepy.page {
  config = {
    navigationBarTitleText: '地址管理'
  };
  mixins = [BaseMixin];
  components = {
    SwipeDelete: SwipeDelete
  };
  data = {
    addressList: [],
    receiverInfo: {},
    // 显示当前组件 0 列表 1新增 2编辑
    currentPage: 0,
    type: '' // 哪个页面跳转过来的
  };
  // 获得用户地址
  async getUserAddress(phone, code) {
    const json = await api.getUserAddress({
      uid: wepy.$instance.globalData.userInfo.ID
    });
    this.hasError(json);
    // console.log(json.list);
    // return json.list;
    // 目前看来一个 action 就够用了 每次到这个页面都会刷新地址 虽然这样不太好
    wepy.$store.dispatch(saveAddress(json.list));
    this.$apply();
  }
  // 这里的思路是对的 不过下面添加微信地址还需要加ADD action 比较费时间 还是拿最粗暴的方式弄 以后改好了
  // 因新加入的 地址虽然能直接写入 reduce 里 不过 ID 是没有的所以比较麻烦
  // 而且这个初始地址 最好一进入程序就初始化 但是由于 页面转发的问题 有可能会出现地址没有初始化的情况 除非每个页面都继承 base.mixin
  async addressInit() {
    let address = wepy.getStorageSync('Address');
    if (!isExist(address)) {
      address = await this.getUserAddress();
      wepy.setStorageSync('Address', address);
    } else {
      address = wepy.getStorageSync('Address');
    }
    // this.addressList = address;
    // let address = await this.getUserAddress();
    wepy.$store.dispatch(initAddress(address));
    // 可以吧请求数据直接放到 action 里, 不过那样就不够清晰 以后修改起来也不好找 还是单纯的 action 往 store 存数据好了
    // wepy.$store.dispatch(
    //   initAddressAsync(wepy.$instance.globalData.userInfo.ID)
    // );
    this.$apply();
  }
  // 添加微信地址
  addWechatAddress() {
    // let that = this;
    wx.chooseAddress({
      success: function(res) {
        // console.log(res);
        wx.request({
          url: 'https://small.huanqiujishi.com/index.php/Api/Address/add_adds',
          data: {
            user_id: wepy.$instance.globalData.userInfo.ID,
            receiver: res.userName,
            tel: res.telNumber,
            sheng: res.provinceName,
            city: res.cityName,
            quyu: res.countyName,
            adds: res.detailInfo,
            code: res.postalCode
          },
          method: 'POST', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
          header: {
            // 设置请求的 header
            'Content-Type': 'application/x-www-form-urlencoded'
          },
          success: function(res) {
            // success
            console.log(res);
            var status = res.data.status;
            if (status == 1) {
              wx.showToast({
                title: '保存成功！',
                duration: 2000
              });
              // XXX 现在不用改了  等改用initadress时 这里需要改
              // 因为放在 onShow() 里会出现请求两次
              // that.getUserAddress();
            } else {
              console.log('添加失败:' + res.data.err);
              wx.showToast({
                title: res.data.err,
                duration: 5000
              });
            }
          },
          fail: function() {
            // fail
            wx.showToast({
              title: '网络异常！',
              duration: 2000
            });
          }
        });
      }
    });
  }
  // 删除地址
  async delUserAddress(id) {
    const json = await api.delUserAddress({
      uid: wepy.$instance.globalData.userInfo.ID,
      id: id
    });
    this.hasError(json);
    // XXX 现在不用改了  等改用initadress时 更新列表这里需要改
    this.getUserAddress();
  }
  async onLoad(option) {
    // this.currentPage = 0;
    // await this.getUserAddress();
    this.type = option.type == undefined ? '' : option.type;
    // await this.addressInit();
    // this.$invoke('addressList', 'setOrgType', this.type);
  }
  async onShow() {
    await this.getUserAddress();
  }
  computed = {};
  methods = {
    add() {
      this.$root.$navigate('/pages/personal_center/address/address_add');
    },
    addwechat() {
      this.addWechatAddress();
    },
    edit(e) {
      var id = e.currentTarget.dataset.id;
      // 0 列表 1新增 2编辑
      // this.$emit('currentPage', 2, id);
      this.$root.$navigate(
        `/pages/personal_center/address/address_edit?id=${id}`
      );
    },
    // 左滑删除
    handleDelItem(itemData) {
      this.delUserAddress(itemData.id);
    },
    // refreshList(val) {
    //   if (val == undefined) return;
    //   console.log('val.....', val);
    //   this.addressList = val;
    //   this.$apply();
    // },
    setOrgType(type) {
      this.type = type;
    },
    tapSelAddress(e) {
      // 这是从订单过来的 点击即为选择地址 跳回订单
      if (this.type != 'order') {
        return;
      }
      var id = e.currentTarget.dataset.id;
      wepy.$store.dispatch(changeAddress(id));
      // console.log('id==' + id);
      wepy.navigateBack({
        url: '/pages/comfire_order?from=selAdd'
      });
    }
  };
  events = {
    // XXX 这个可能无用了删除就行了
    refreshAddList(msg) {
      this.getUserAddress();
    }
  };
}
</script>
<style lang="scss">
.hidden {
  display: none;
}
.list_box {
  height: 150rpx;
}
.address {
  .list_box:last-child {
    border-bottom: 1px solid #efefef;
  }
  .address_list {
    display: flex;
    justify-content: space-between;
    height: 150rpx;
    align-items: center;
    padding: 0rpx 0px 0px 35rpx;
    border-top: 1px solid #efefef;
    .title {
      color: #000;
    }
    .arrow {
      height: 150rpx;
      line-height: 150rpx;
      width: 150rpx;
      text-align: center;
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
}
.add_wrap {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 20rpx;
  margin: 0 auto;
}
.add_wrap2 {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 130rpx;
  margin: 0 auto;
}
.address-name-phone {
  margin-bottom: 20rpx;
  font-size: 11pt;
  font-weight: 900;
}
.address-name {
  margin-right: 20rpx;
}
.type_green {
  background: #09bb07;
  color: #fff;
}
</style>
