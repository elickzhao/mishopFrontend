<!--组件测试-->
<template>
  <form name='pushMsgFm' report-submit bindsubmit='orderSign'>
    <view> 单号: 0</view>
    <view> 商家名称: 腾讯早餐店</view>
    <view>实付金额:66元</view>
    <view>物品名称：包子</view>
    <view>付款金额：68元</view>
    <view>付款时间： 2018年1月1日 </view>
    <button formType="submit">发送模板消息</button>
  </form>
</template>

<script>
  import wepy from 'wepy';
  import {
    USER_INFO,
    USER_SPECICAL_INFO,
    FORM_ID
  } from "../utils/constant";
  import api from "../api/api";
  import CommonMixin from "../utils/common-mix";
  import QQMapWX from '../utils/qqmap-wx-jssdk.min';
  export default class exchangeGoods extends wepy.page {
    config = {
      navigationBarTitleText: '组件测试',
    }
    mixins = [CommonMixin];
    data = {}
    computed = {}
    onLoad() {
      this.getAdressInfo()
    }
    //逆地址解析 通过经纬度解析地址详细信息
    getAdressInfo() {
      //这个是QQ地图插件 原本小程序位置不具备此功能
      let qqmapsdk = new QQMapWX({
        key: '6QIBZ-NHXR3-KYO3T-YZAGT-4ADW6-NTBF5'
      });
      wx.getLocation({
        type: 'wgs84', //默认为 wgs84 返回 gps 坐标，gcj02 返回可用于wepy.openLocation的坐标,
        // success: res => {
        //   console.log(res);
        // }
        success: function(res) {
          var latitude = res.latitude
          var longitude = res.longitude
          var speed = res.speed
          var accuracy = res.accuracy
          //原本的小程序获取位置 只能在地图标点 不能获取地址详细信息
          // console.log(res);
          // wx.openLocation({
          //   latitude: latitude,
          //   longitude: longitude,
          //   scale: 28
          // })
          //通过插件可以获取 省市区 等详细信息
          qqmapsdk.reverseGeocoder({
            location: {
              latitude: latitude,
              longitude: longitude,
            },
            success: function(res) {
              console.log("省: "+res.result.address_component.province);
              console.log("市: "+res.result.address_component.city);
              console.log("区: "+res.result.address_component.district);
              //更多返回信息看这里 https://lbs.qq.com/qqmap_wx_jssdk/method-reverseGeocoder.html
            },
            fail: function(res) {
              console.log(res);
            },
            // complete: function(res) {
            //   console.log(res);
            // }
          });
        }
      });
    }
    methods = {
      // orderSign
      async orderSign(e) {
        var fId = e.detail.formId;
        this.sendMessage(fId, '2018091298505610', 1)
      }
      // end orderSign
    }
    events = {}
  }
</script>

<style lang="less">
  .time_line_box {
    position: relative;
    height: 150rpx;
    overflow: hidden;
    margin: 10rpx;
  }
  .time_line {
    position: absolute;
    z-index: 1;
    left: 0;
    top: 70rpx;
    height: 5rpx;
    background: #dfdfdf;
    transition: transform 0.4s;
  }
  .day-box {
    float: left;
    width: 14.28%;
  }
  .award-jf {
    padding-top: 20rpx;
    font-size: 26rpx;
    color: #999;
  }
  .order_item {
    position: absolute;
    bottom: 0;
    z-index: 2;
    text-align: center;
    font-size: 26rpx;
    padding-bottom: 20rpx;
    color: #666;
  }
  .order_item:after {
    content: '';
    position: absolute;
    left: 50%;
    right: auto;
    transform: translateX(-50%);
    bottom: -5rpx;
    height: 10rpx;
    width: 10rpx;
    border-radius: 50%;
    border: 2rpx solid #dfdfdf;
    background-color: #f8f8f8;
  }
  .selected {
    color: #eb6623;
  }
  .selected:after {
    background-color: #eb6623;
    border-color: #eb6623;
  }
  .filling_line {
    position: absolute;
    z-index: 1;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    background-color: #eb6623;
    transform-origin: left center;
    transition-property: transform;
    transition-duration: 1.5s;
    transition-timing-function: initial;
    transition-delay: initial;
    transform: scaleX(0)
  }
</style>
