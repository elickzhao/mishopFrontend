<!--确认订单-->
<template>
  <view class="comfire_order">
    <view class="address" @tap="setAddress">
      <view class="empty_address" wx:if="{{!is_exit_address}}">
        <view class="title">设置收货地址</view>
        <view class="arrow">&gt;</view>
      </view>
      <view class="address_info" wx:else>
        <view class="title">
          <view class="address-name-phone">
            <text class="address-name">收货人: {{address.name}}</text>
            <text class="address-phone">{{address.tel}}</text>
          </view>
          <view class="active_address">
            <text class="defult" wx:if="{{address.is_default==1}}"> [默认]</text> {{address.address_xq}}
          </view>
        </view>
        <view class="arrow">&gt;</view>
      </view>
    </view>
    <view class="spacing"></view>
    <view class="goodsList">
      <!--列表显示2个，绑定数据记得去掉，这里做调试-->
      <repeat for="{{list}}" key="index" index="index" item="item">
        <view class="list_box">
          <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
            <view class="goods-info">
              <view class="img-box">
                <image src="{{item.photo_x}}" class="img" />
              </view>
              <view class="text-box">
                <view class="goods-title">{{item.name}}</view>
                <view class="goods-label">数量: x {{item.num}}</view>
                <view class="goods-price">¥ {{item.price_yh}}</view>
                <!-- <view class="buy-num">
                              <view class="jian-btn {{item.num==1? 'disabled' : ''}}" catchtap="jianBtnTap" data-index="{{index}}" data-id="{{item.id}}">-</view>
                              <input type="number" value="{{item.num}}" disabled/>
                              <view class="jia-btn " catchtap="jiaBtnTap" data-index="{{index}}" data-id="{{item.id}}">+</view>
                            </view> -->
              </view>
            </view>
          </swipeDelete>
        </view>
      </repeat>
    </view>
    <view class="spacing"></view>
    <view class="order_info">
      <view class="block">
        <view class="left">配送方式</view>
        <view class="right">包邮</view>
      </view>
      <view class="block">
        <view class="left">买家留言:</view>
        <view class="right input_box">
          <input name="remark" bindinput="bindKeyInput" placeholder="对本次交易的说明" />
        </view>
      </view>
      <!-- <view class="spacing"></view>
                      <view class="block">
                        <view class="left total_jf">积分 \t共{{total_jf_num}}\t可用{{can_use_score}}</view>
                        <view class="right"><input type="number" class="dk-jf" value="{{jf_num}}" bindinput="jfInput" placeholder="输入抵扣积分" /></view>
                      </view> -->
      <view class="spacing"></view>
      <view class="block">
        <view class="left tongji">商品金额</view>
        <view>
          <view class="right price" wx:if="{{jf_num>0}}">商品金额:￥{{totalPrice}}-积分:￥{{reduce_fee}}</view>
          <view class="right price">应付:￥{{actualPrice}}</view>
        </view>
      </view>
    </view>
    <view class="pay_box">
      <block wx:if="{{totalPrice > miniNum}}">
        <button @tap="goPay('weixin')" form-type="submit" class="button type_green">配送到家</button>
      </block>
      <block wx:else>
        <button form-type="submit" class="button">满 {{miniNum}} 元起送</button>
      </block>
      <br/>
      <picker bindchange="createProductOrderByXX" value="{{shops}}" range="{{shops}}">
        <button form-type="submit" class="button" style="background:#FF0077;margin-top:20rpx;color:#FFF">门店自提</button>
      </picker>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import tip from '../utils/tip';
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO,
    ADDRESS_ID
  } from '../utils/constant';
  import swipeDelete from '../components/common/wepy-swipe-delete'
  export default class ComfireOrder extends wepy.page {
    config = {
      navigationBarTitleText: '确认订单',
    }
    components = {
      swipeDelete
    }
    data = {
      miniNum: 0,
      shops: [],
      paytype: "",
      onLoadAddressID: "",
      cartId: "",
      list: [],
      goodsId: "",
      //卖家留言
      sellerMessage: "",
      //是否存在默认地址
      is_exit_address: false,
      address: {},
      //总价
      totalPrice: 0,
      actualPrice: 0,
      purchaseType: 1,
      //总积分
      total_jf_num: 0,
      can_use_score: 0,
      deduScore: 0,
      deduFee: 0,
      //输入抵扣积分
      jf_num: 0,
      reduce_fee: 0,
      operating: false
    }
    //获取订单详情
    async getOrderDetailInfo() {
      let that = this;
      console.log(this.cartId)
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let uid = userSpecialInfo.ID;
      const json = await api.preOrder({
        query: {
          uid: uid,
          cart_id: that.cartId
        }
      });
      console.log(json)
      if (json.data.code == 0) {
        let data = json.data;
        this.list = data.list;
        this.totalPrice = data.price;
        this.actualPrice = data.price;
        this.is_exit_address = data.addemt;
        this.address = data.adds;
        this.onLoadAddressID = data.adds.id;
        // this.total_jf_num = data.userScore;
        // this.can_use_score = data.canUseScore;
        // this.deduScore = data.deduScore;
        // this.deduFee = data.deduFee;
        // this.jf_num = data.canUseScore;
        // this.reduce_fee = data.reduceFee;
      } else {
        tip.error(json.data.msg)
        console.log(json.data.err)
      }
      that.$apply();
    }
    async getAddressInfo(id) {
      let that = this
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      const json = await api.receiverInfoById({
        query: {
          id: id
        }
      });
      if (json.data.code == 0) {
        console.log(json)
        let adress = json.data.receiverInfo
        adress.address_xq = adress.provinceName + " " + adress.cityName + " " + adress.areaName + " " + adress.addr_xq
        this.is_exit_address = true;
        this.address = adress;
      } else {
        tip.error(json.data.msg)
      }
      that.$apply();
    }
    //线下支付 => 改成店内自提
    createProductOrderByXX(e) {
      this.paytype = 'cash'
      //没有门店就提示
      if (this.shops == null) {
        wx.showToast({
          title: "线下支付开通中，敬请期待!",
          duration: 3000
        });
        return false;
      }
      //console.log('picker发送选择改变，携带值为', this.data.shops[e.detail.value])
      let shopAdd = this.address
      shopAdd['address_xq'] = this.shops[e.detail.value];
      this.address = shopAdd;
      console.log(this.address)
      //其他手机号什么都不用改
      this.goToPay()
      //console.log('执行完毕了');
      this.$apply();
    }
    async getShop() {
      let that = this
      const json = await api.getShop({
        query: {}
      });
      this.shops = json.data.data
      that.$apply();
    }
    onLoad(option) {
      let that = this;
      this.cartId = option.ids,
        this.actualPrice = 0;
      this.totalPrice = 0;
      this.total_jf_num = 0;
      this.can_use_score = 0;
      this.deduScore = 0;
      this.deduFee = 0;
      this.jf_num = 0;
      this.reduce_fee = 0;
      this.operating = false;
      let systemInfo = wepy.getStorageSync(SYSTEM_INFO)
      this.miniNum = systemInfo.miniNum
      //that.goodsId = option.goodsId == undefined ? "" : option.goodsId;
      //this.purchaseType = option.purchasetype == undefined ? "1" : option.purchasetype;
      /*that.list = bb.result.products;
      console.log(bb.result.products)*/
      this.getOrderDetailInfo();
      this.getShop()
      // let from = option.from == undefined ? "" : option.from;
      // console.log(from+"---");
      // if (from == "selAdd") {
      //   this.getAddressInfo(wepy.getStorageSync(ADDRESS_ID))
      // }
    }
    onShow(option) {
      let onShowAddressID = wepy.getStorageSync(ADDRESS_ID)
      if (this.onLoadAddressID != onShowAddressID && onShowAddressID != "") {
        this.onLoadAddressID = onShowAddressID
        this.getAddressInfo(onShowAddressID)
      }
    }
    computed = {}
    async goToPay(formId) {
      //测试调用接口用，可注释
      tip.loading("提交订单中");
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let uid = userSpecialInfo.ID;
      const json = await api.saveByCart({
        query: {
          uid: uid,
          cart_id: this.cartId,
          aid: this.address.id,
          remark: this.sellerMessage,
          //reduceScore: this.jf_num,
          type: this.paytype,
          address: this.address
        }
      });
      if (json.data.code == 0) {
        //补货直接提交到后台去审核
        // if (this.purchaseType == 2) { //补货
        //   tip.success("已提交补货申请!");
        //   setTimeout(() => {
        //     tip.loaded();
        //     wepy.navigateTo({
        //       url: "/pages/reorder"
        //     })
        //   }, 2000)
        //   return;
        // }
        let order = json.data.data;
        //保存成功了后进行微信支付
        const pay = await api.toPay({
          query: {
            order_id: order.order_id,
            order_sn: order.order_sn,
            uid: uid
          }
        });
        //console.log(pay)
        if (pay.data.status == 1) {
          let payData = pay.data.arr;
          //以下是微信支付
          wx.requestPayment({
            appId: payData.appId,
            timeStamp: payData.timeStamp,
            nonceStr: payData.nonceStr,
            package: payData.package,
            signType: 'MD5',
            paySign: payData.paySign,
            success: function(res) {
              console.log('pay', res)
              //tip.loaded();
              wepy.navigateTo({
                url: "/pages/pay_success?orderNo=" + order.order_id
              })
              // setTimeout(() => {
              //   //支付成功 关闭loadding 跳转到支付成功页面
              //   tip.loaded();
              //   wepy.navigateTo({
              //     url: "/pages/pay_success?orderNo=" + order.order_id
              //   })
              // }, 2000)
            },
            fail: function(res) {
              console.log('pay_fail-->', res)
              tip.alert('支付失败');
              setTimeout(() => {
                //支付成功 关闭loadding 跳转到支付成功页面
                tip.loaded();
                wepy.switchTab({
                  url: "/pages/info"
                })
                // wepy.navigateTo({
                //   url: "/pages/order"
                // })
              }, 2000)
            }
          })
        } else {
          tip.alert('支付失败');
          setTimeout(() => {
            //支付成功 关闭loadding 跳转到支付成功页面
            tip.loaded();
            wepy.navigateTo({
              url: "/pages/order"
            })
          }, 2000)
        }
      } else {
        tip.error(json.data.msg)
      }
    }
    async reduceGoodNum(id, num, index) {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.cartUpdateNum({
        query: {
          openId: openId,
          id: id,
          num: num
        }
      });
      if (json.data.code == 0) {
        // 购物车数据
        this.list[index].num = num;
        this.totalPrice = this.totalPrice - this.list[index].price;
        this.actualPrice = this.totalPrice - this.reduce_fee;
        this.operating = false;
      } else {
        tip.error(json.data.msg)
      }
      this.$apply();
    }
    async addGoodNum(id, num, index) {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.cartUpdateNum({
        query: {
          openId: openId,
          id: id,
          num: num
        }
      });
      if (json.data.code == 0) {
        // 购物车数据
        this.list[index].num = num;
        this.totalPrice = parseInt(this.totalPrice) + parseInt(this.list[index].price);
        this.actualPrice = this.totalPrice - this.reduce_fee;
        this.operating = false;
      } else {
        tip.error(json.data.msg)
      }
      this.$apply();
    }
    async deleteGoods(itemData) {
      var id = itemData.id;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.cartDel({
        query: {
          openId: openId,
          cartIdList: [id],
        }
      });
      if (json.data.code == 0) {
        // 购物车数据
        let retList = [];
        for (var i = 0; i < this.list.length; i++) {
          if (this.list[i].id == id) {
            this.totalPrice -= parseInt(this.list[i].priceSubtotal);
            this.actualPrice = this.totalPrice - this.reduce_fee;
            continue;
          } else {
            retList.push(this.list[i]);
          }
        }
        this.list = retList;
      } else {
        tip.error(json.data.msg)
      }
      this.$apply();
    }
    methods = {
      handleDelItem(itemData) {
        this.deleteGoods(itemData);
      },
      bindKeyInput(e) {
        this.sellerMessage = e.detail.value;
        console.log("====" + e.detail.value);
      },
      async goPay(e) {
        //var fId = e.detail.formId;
        //console.log(e)
        this.paytype = e
        if (!this.is_exit_address) {
          await tip.confirm('你未设置收货地址，请设置地址');
          wepy.navigateTo({
            url: "/pages/address?type=order"
          })
          return false;
        }
        //这个是为了查看支付成功页面做的
        // wepy.navigateTo({
        //   url: "/pages/pay_success?orderNo=2746"
        // })
        this.goToPay();
      },
      setAddress() {
        wepy.navigateTo({
          url: "/pages/address?type=order"
        })
      },
      jianBtnTap(e) {
        if (this.operating) {
          return;
        }
        this.operating = true;
        var index = parseInt(e.currentTarget.dataset.index);
        var id = e.currentTarget.dataset.id;
        var num = this.list[index].num;
        // 如果只有1件了，就不允许再减了
        if (num > 1) {
          num--;
        } else {
          return;
        }
        // 购物车数据
        //this.list[index].num = num;
        //this.totalPrice = this.totalPrice-this.list[index].price;
        //this.actualPrice = this.totalPrice - this.reduce_fee;
        //this.$apply();
        this.reduceGoodNum(id, num, index);
      },
      jiaBtnTap(e) {
        if (this.operating) {
          return;
        }
        this.operating = true;
        var index = parseInt(e.currentTarget.dataset.index);
        var num = this.list[index].num;
        var id = e.currentTarget.dataset.id;
        // 自增
        num++;
        // 购物车数据
        /*this.list[index].num = num;
        this.totalPrice = parseInt(this.totalPrice)+parseInt(this.list[index].price);
        this.actualPrice = this.totalPrice - this.reduce_fee;
        this.$apply();*/
        this.addGoodNum(id, num, index);
      },
      jfInput(e) {
        let num = e.detail.value * 10 / 10;
        let reg = /^[0-9]+$/;
        if (!reg.test(num)) {
          tip.error("输入类型有误");
          this.jf_num = "";
          return {
            value: ""
          };;
        }
        if (this.can_use_score != num && num != 0) {
          this.jf_num = this.can_use_score;
        }
        /* else if(parseInt(this.jf_num)%this.deduScore) {
                this.jf_num = Math.floor(parseInt(this.jf_num)/this.deduScore)*this.deduScore;
              }*/
        else {
          this.jf_num = num;
        }
        let beishu = this.jf_num / this.deduScore;
        this.reduce_fee = beishu * this.deduFee;
        this.actualPrice = this.totalPrice - this.reduce_fee;
        return {
          value: this.jf_num
        };
      }
    }
    events = {}
  }
</script>

<style lang="less">
  .address {
    border-top: 1px solid #efefef;
    background: #fff;
    .empty_address,
    .address_info {
      display: flex;
      justify-content: space-between;
      height: 103rpx;
      align-items: center;
      padding: 0rpx 35rpx;
      .title {
        color: #000;
      }
      .arrow {
        color: #9a9a9a;
      }
      .user_info {
        color: #1a1a1a;
      }
      .active_address {
        margin-top: 20rpx;
      }
      .defult {
        color: #ea4a3a;
      }
    }
    .address_info {
      height: 150rpx;
    }
  }
  .order_info {
    .block {
      display: flex;
      justify-content: space-between;
      height: 91rpx;
      align-items: center;
      padding: 0rpx 35rpx;
      border-bottom: 1px solid #efefef;
      background: #fff;
      .txt {
        font-size: 32rpx;
      }
      .left {
        color: #000;
      }
      .right {
        color: #9a9a9a;
        text-align: right;
      }
      .price {
        color: #ea4a3a;
        font-size: 32rpx;
      }
      .tongji {
        font-size: 32rpx;
      }
      .input_box {
        flex: 1;
        margin-left: 20rpx;
      }
      .total_jf {
        font-size: 32rpx;
      }
    }
  }
  .list_box {
    height: 250rpx;
  }
  .goods-info {
    border-bottom: 1px solid #eee;
    display: flex;
    padding: 20rpx;
    box-sizing: border-box;
    position: relative;
    background: #fff;
  }
  .goods-info .img-box {
    width: 160rpx;
    height: 160rpx;
    overflow: hidden;
    margin-right: 28rpx;
    background-color: #d8d8d8;
  }
  .goods-info .text-box {
    width: 480rpx;
  }
  .goods-info .text-box .goods-title {
    font-size: 28rpx;
    color: #414141;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    padding: 10rpx 20rpx 5rpx 0;
  }
  .goods-info .text-box .goods-label {
    font-size: 26rpx;
    color: #999;
    height: 38rpx;
    line-height: 38rpx;
    margin: 8rpx 0 25rpx 0;
  }
  .goods-info .text-box .goods-price {
    font-size: 34rpx;
    color: #e64340;
  }
  .goods-info .text-box .buy-num {
    width: 164rpx;
    height: 48rpx;
    line-height: 48rpx;
    position: absolute;
    right: 30rpx;
    bottom: 30rpx;
    display: flex;
    font-size: 24rpx;
    text-align: center
  }
  .goods-info .text-box .buy-num .jian-btn {
    width: 48rpx;
    height: 100%;
    border-left: 1rpx solid #ccc;
    border-bottom: 1rpx solid #ccc;
    border-top: 1rpx solid #ccc;
    border-bottom-left-radius: 6rpx;
    border-top-left-radius: 6rpx;
  }
  .goods-info .text-box .buy-num .jian-btn.disabled {
    background-color: #f5f5f9;
    border-left: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .goods-info .text-box .buy-num .jia-btn {
    width: 48rpx;
    height: 100%;
    border-right: 1rpx solid #ccc;
    border-bottom: 1rpx solid #ccc;
    border-top: 1rpx solid #ccc;
    border-bottom-right-radius: 6rpx;
    border-top-right-radius: 6rpx;
  }
  .goods-info .text-box .buy-num .jia-btn.disabled {
    background-color: #f5f5f9;
    border-right: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .goods-info .text-box .buy-num input {
    width: 68rpx;
    height: 48rpx;
    min-height: 48rpx;
    text-align: center;
    font-size: 24rpx;
    border: 1rpx solid #ccc;
  }
  .goods-info .img-box .img {
    width: 160rpx;
    height: 160rpx;
  }
  .pay_box {
    margin-top: 104rpx;
    padding: 0 22rpx;
  }
  .dk-jf {
    text-align: right;
    color: #666;
  }
  .address-name-phone {
    margin-bottom: 20rpx;
    font-size: 11pt;
    font-weight: 900;
  }
  .address-name {
    margin-right: 20rpx;
  }
</style>
