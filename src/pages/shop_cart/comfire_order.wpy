<!--确认订单-->
<template>
  <view class="comfire_order">
    <!-- 新收货地址 -->
    <address :address.sync="address" :is_exit_address.sync="is_exit_address"></address>
    <!-- /新收货地址 -->
    <view class="spacing"></view>
    <view class="{{is_exit_address ? 'goodsList1' : 'goodsList'}} ">
      <wxc-panel margin="{{false}}">
        <view class="content1"> <i class="iconfont shopIcon" style="color: #09BB07;">&#xe6df;</i><text space="ensp" style="font-size:16px;color: #666;"> {{ currentShop != '当前无门店' ? currentShop : appName+'旗舰店' }}</text></view>
      </wxc-panel>
      <!--列表显示2个，绑定数据记得去掉，这里做调试-->
      <repeat for="{{list}}" key="index" index="index" item="item">
        <view class="goods-info">
          <view class="img-box">
            <image src="{{item.photo_x}}" class="img" />
          </view>
          <view class="text-box">
            <view class="goods-title">{{item.name}}</view>
            <view class="goods-label">数量: x {{item.num}}
              <block wx:if="{{item.pro_type == 2}}">
                <wxc-label class="label" style="margin-left:20rpx;" type="fill" type-color="#ffe8ee" text-color="#ff5577">特价商品无法使用优惠券</wxc-label>
              </block>
            </view>
            <view class="goods-price">¥ {{item.price_yh}}</view>
          </view>
        </view>
      </repeat>
      <wxc-panel margin="{{false}}">
        <view class="content">
          <text space="ensp">共 {{list.length}} 件商品  合计:</text> <text class="totalPrice"> ￥{{totalPrice}}</text></view>
      </wxc-panel>
    </view>
    <view class="h-gap"></view>
    <view class="order_info">
      <view class="block">
        <view class="left">配送方式</view>
        <view class="right">包邮</view>
      </view>
      <view class="block">
        <view class="left">买家留言:</view>
        <view class="right input_box">
          <input name="remark" bindinput="bindKeyInput" placeholder="对本次交易的说明" />
        </view>
      </view>
      <view class="h-gap"></view>
      <view wx:if="{{limitPrice > 30 && (total_jf_num >= 100 || coupons.length >0)}}" class="list-item" @tap="selectCoupon">
        <wxc-list title="优惠券" desc="使用优惠券" arrow="{{true}}">
        </wxc-list>
      </view>
      <view wx:if="{{currentShop != '当前无门店'}}" class="list-item">
        <wxc-list title="服务门店" desc="{{currentShop}}" @tap="onOpen" arrow="{{true}}">
        </wxc-list>
        <!-- <picker bindchange="chooseShop" range-key="name" value="{{shops}}" range="{{shops}}">
            <wxc-list title="推荐门店" desc="{{currentShop}}" arrow="{{true}}">
            </wxc-list>
          </picker> -->
      </view>
      <view class="block">
        <view class="left tongji">合计金额</view>
        <view>
          <view class="right price">应付:￥{{actualPrice}}</view>
        </view>
      </view>
      <view wx:if="{{deduScore}}" class="list-item">
        <wxc-list title="优惠券:" desc="- ￥{{reduce}}" arrow="{{false}}" mode="none"></wxc-list>
      </view>
    </view>
    <wux-cascader visible="{{ showCascader }}" city="{{ lnglat.city }}" defaultValue="{{ value }}" title="所在地区" options="{{ options }}" bind:close="onClose" bind:change="onChange" />
    <view class="spacing5"></view>
    <view class="footer">
      <wxc-panel border="{{false}}">
        <view class="bottom-left">实付款: <text class="totalPrice"> ￥{{actualPrice}}</text></view>
        <!-- 这里改提问的方式 确定门店 不要选择 -->
        <!-- <picker bindchange="createProductOrderByXX" range-key="name" value="{{shops}}" range="{{shops}}"> -->
        <view wx:if="{{currentShop != '当前无门店'}}" class=" content to-pay-btn" style="background:#09bb07;" @tap="createProductOrderByXX">门店自提</view>
        <!-- </picker> -->
        <view wx:if="{{totalNum > miniNum}}" class=" content to-pay-btn" @tap="goPay('weixin')">配送到家</view>
        <view class=" content to-pay-btn" style="background:#999;" wx:else>满 {{miniNum}} 元起送</view>
      </wxc-panel>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/order';
import addresses from '@/api/addresses';
import coupon from '@/api/coupon';
import tip from '@/utils/Tips';
import _ from 'lodash';
import { isExist } from '@/utils/Common';
import Adress from '@/components/common/address';
import CheckLoginMixin from '@/mixins/check_login';
import BaseMixin from '@/mixins/base';
import AddressMixin from '@/mixins/address';
import { saveAddress } from '@/store/actions';
// import CommonMixin from '../utils/common-mix';
// import { SYSTEM_INFO, USER_SPECICAL_INFO, ADDRESS_ID } from '../utils/constant';
import { connect } from 'wepy-redux';
import store from '@/store/utils';
@connect({
  miniNum: store.get('miniNum'),
  lnglat: store.get('lnglat')
})
export default class ComfireOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
    usingComponents: {
      'wxc-flex': '../../packages/@minui/wxc-flex/dist/index',
      'wxc-icon': '../../packages/@minui/wxc-icon/dist/index',
      'wxc-list': '../../packages/@minui/wxc-list/dist/index',
      'wxc-panel': '../../packages/@minui/wxc-panel/dist/index',
      'wxc-label': '../../packages/@minui/wxc-label/dist/index',
      'wux-cascader': '../../packages/wux/cascader/index'
    }
  };
  components = {
    // discover: Discover,
    address: Adress
  };
  mixins = [BaseMixin, CheckLoginMixin, AddressMixin];
  data = {
    appName: '',
    showCascader: false, // 显示级联
    value: '', // 级联门店初始门店选择
    options: '', // 门店级联选择
    limitPrice: 0, // 这个价格是去掉特价商品的总价
    coupons: [],
    couponItems: [],
    // 优惠的金额
    reduce: '',
    voucheID: 0,
    // 积分优惠券减去的钱数
    cutPrice: 5,
    miniNum: 0,
    shops: [],
    paytype: '',
    onLoadAddressID: '',
    cartId: '',
    list: [],
    goodsId: '',
    // 卖家留言
    sellerMessage: '',
    // 是否存在默认地址
    is_exit_address: false,
    address: {},
    // 总价
    totalNum: 0,
    totalPrice: 0,
    actualPrice: 0,
    purchaseType: 1,
    // 总积分
    total_jf_num: 0,
    can_use_score: 0,
    deduScore: false,
    deduFee: 0,
    // 输入抵扣积分
    jf_num: 0,
    reduce_fee: 0,
    operating: false,
    kuaidi_name: '仓库配送',
    currentShop: '当前无门店'
  };
  // 获取订单详情
  async getOrderDetailInfo() {
    const json = await api.preOrder({
      uid: wepy.$instance.globalData.userIDS.ID,
      cart_id: this.cartId
    });
    // console.log(json);
    this.hasError(json);
    let aid = json.adds ? json.adds.id : '';
    this.list = json.list;
    this.totalPrice = json.price.toFixed(2);
    this.totalNum = json.price;
    this.actualPrice = json.price.toFixed(2);
    this.is_exit_address = json.addemt;
    this.address = json.adds;
    this.onLoadAddressID = aid;
    this.total_jf_num = json.userScore;
    this.limitPrice = json.limitPrice;
    this.$apply();
  }
  // 获得用户地址
  async getUserAddress() {
    const json = await addresses.getUserAddress({
      uid: wepy.$instance.globalData.userIDS.ID
    });
    this.hasError(json);
    wepy.$store.dispatch(saveAddress(json.list));
    // this.getAddressInfo();
    this.$apply();
  }
  // 设置收货地址
  getAddressInfo() {
    let that = this;
    let address = wepy.$store.getState().address;
    let list = wepy.$store.getState().address.list;
    let current = {};
    if (list.length > 0) {
      list.map(item => {
        if (item.id == address.current) {
          current = item;
        }
      });
      that.is_exit_address = true;
      that.address = current;
      that.$apply();
    } else {
      that.is_exit_address = false;
      that.address = {};
      that.$apply();
    }
    if (that.is_exit_address == false) {
      // this.addWechatAddressSync()
      wx.getSetting({
        success(res) {
          let scope = res.authSetting;
          console.log(scope, '***********************');
          // 这里是取消了权限 才会打开授权页面 而当没有这个授权项时 是不会打开的
          if (scope['scope.address'] == true) {
            wx.showModal({
              title: '请添加收货地址!',
              content: '你未设置收货地址，请设置地址',
              success: res => {
                if (res.confirm) {
                  console.log('用户点击确定');
                  that.addWechatAddressSync();
                } else if (res.cancel) {
                  console.log('用户点击取消');
                }
              }
            });
          } else {
            that.addWechatAddressSync();
          }
        }
      });
    }
  }
  // 线下支付 => 改成店内自提
  createProductOrderBy(e) {
    this.paytype = 'cash';
    // 没有门店就提示
    if (this.shops == null) {
      wx.showToast({
        title: '线下支付开通中，敬请期待!',
        duration: 3000
      });
      return false;
    }
    // tip.confirm(`确认 ${this.currentShop} 自提`,'','确认自提门店!')
    // -------------------  原版
    // console.log('picker发送选择改变，携带值为', this.data.shops[e.detail.value])
    // let shopAdd = this.address;
    // shopAdd['address_xq'] = this.shops[e.detail.value].name;
    // this.currentShop = this.shops[e.detail.value].name;
    // this.address = shopAdd;
    // --------------------
    let that = this;
    wx.showModal({
      title: '确认自提门店!', // 提示的标题,
      content: `由 ${this.currentShop} 负责配货`, // 提示的内容,
      showCancel: true, // 是否显示取消按钮,
      cancelText: '取消', // 取消按钮的文字，默认为取消，最多 4 个字符,
      cancelColor: '#000000', // 取消按钮的文字颜色,
      confirmText: '确定', // 确定按钮的文字，默认为取消，最多 4 个字符,
      confirmColor: '#3CC51F', // 确定按钮的文字颜色,
      success: res => {
        if (res.confirm) {
          that.goToPay();
        } else if (res.cancel) {
          // reject(payload);
        }
      }
    });
    this.$apply();
  }
  // 获取门店列表
  async getShop() {
    // this.shops = await api.getShop();
    this.shops = this.lnglat.shops;
    if (isExist(this.shops)) {
      this.currentShop = this.kuaidi_name = this.shops[0].name;
    }
    // console.log(this.shops);
    this.$apply();
  }
  // 发送消息
  async sendMessage(formId, orderId, flag, msg) {
    let openid = wepy.$instance.globalData.userIDS.openid;
    // console.log(formId+'--'+orderId+'--'+flag+'--'+openid+'--'+msg)
    // 必须有openid
    if (openid) {
      let json = await api.messageInfo({
        openid: openid,
        fid: formId,
        oid: orderId,
        flag: flag,
        msg: msg
      });
      this.hasError(json);
    }
  }
  initCascader() {
    let shops = this.lnglat.shops;
    let sim = [];
    if (shops.length > 0) {
      this.city = this.lnglat.city;
      this.value = [shops[0].county, shops[0].name];
      shops.map(d => {
        if (
          typeof _.find(sim, {
            label: d.county
          }) != 'undefined' &&
          sim.length > 0
        ) {
          let key = _.findIndex(sim, o => {
            return o.label == d.county;
          });
          sim[key].children.push({
            label: d.name,
            value: d.name
          });
        } else {
          if (sim.length == 0) {
            sim = [
              {
                label: d.county,
                value: d.county,
                children: [
                  {
                    label: d.name,
                    value: d.name
                  }
                ]
              }
            ];
          } else {
            sim.push({
              label: d.county,
              value: d.county,
              children: [
                {
                  label: d.name,
                  value: d.name
                }
              ]
            });
          }
        }
      });
      this.options = sim;
      this.$apply();
    }
  }
  async onLoad(option) {
    // 检查权限  这里好像少个授权定位  还是在前面购物车那里 查一下
    this.checkLogin();
    await this.getUserAddress();
    // let that = this;
    this.cartId = option.ids;
    this.actualPrice = 0;
    this.totalPrice = 0;
    this.total_jf_num = 0;
    this.can_use_score = 0;
    this.deduScore = 0;
    this.deduFee = 0;
    this.jf_num = 0;
    this.reduce_fee = 0;
    this.operating = false;
    await this.getOrderDetailInfo();
    this.getShop();
    this.couponList();
    this.appName = wepy.$store.getState().cache.setting.appName;
  }
  onShow(option) {
    setTimeout(() => {
      this.getAddressInfo();
    }, 1000);
    this.initCascader();
  }
  computed = {};
  // 支付
  async goToPay(formId) {
    let that = this;
    // 测试调用接口用，可注释
    tip.loading('提交订单中');
    const json = await api.saveBuyCart({
      uid: wepy.$instance.globalData.userIDS.ID,
      cart_id: this.cartId,
      aid: this.address.id,
      remark: this.sellerMessage,
      deduScore: this.deduScore,
      vid: this.voucheID,
      actualPrice: this.actualPrice,
      type: this.paytype,
      address: this.address,
      kuaidi_name: this.kuaidi_name
    });
    this.hasError(json);
    // XXX 再添加一个清除 cart的reduce
    store.refresh('cart');
    // console.log(json);
    if (json.code == 0) {
      let order = json.data;
      // 保存成功了后进行微信支付
      const pay = await api.toPay({
        order_id: order.order_id,
        order_sn: order.order_sn,
        uid: wepy.$instance.globalData.userIDS.ID
      });
      // console.log(pay);
      if (pay.status == 1) {
        let payData = pay.arr;
        // 以下是微信支付
        wx.requestPayment({
          appId: payData.appId,
          timeStamp: payData.timeStamp,
          nonceStr: payData.nonceStr,
          package: payData.package,
          signType: 'MD5',
          paySign: payData.paySign,
          success: function(res) {
            console.log('pay', res);
            // tip.loaded();
            wepy.navigateTo({
              url: '/pages/shop_cart/pay_success?orderNo=' + order.order_id
            });
            // 发送消息
            let payId = payData.package.split('=');
            that.sendMessage(payId[1], order.order_id, 0, 'null');
          },
          fail: function(res) {
            let errMsg = res.errMsg.split(':');
            let payId = payData.package.split('=');
            that.sendMessage(payId[1], order.order_id, 1, errMsg[1]);
            // 这里也可以发送个未付款的消息
            tip.alert('支付失败');
            setTimeout(() => {
              // 支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.switchTab({
                url: '/pages/personal_center/personal_center'
              });
            }, 2000);
          }
        });
      } else {
        tip.alert('支付失败');
        setTimeout(() => {
          // 支付成功 关闭loadding 跳转到支付成功页面
          tip.loaded();
          wepy.navigateTo({
            url: '/pages/personal_center/personal_center'
          });
        }, 2000);
      }
    } else {
      tip.loaded();
      tip.error(json.msg);
    }
  }
  // 优惠券列表
  async couponList() {
    let that = this;
    const json = await coupon.getCustCouponList({
      uid: wepy.$instance.globalData.userIDS.ID,
      flag: 1,
      totalPrice: this.limitPrice // 这个价格是去掉特价商品的总价
    });
    this.hasError(json);
    console.log(json, 'line 474');
    console.log(this.list);
    let dataList = json.list;
    this.coupons = dataList;
    let list = [];
    let jifen = this.total_jf_num >= 100;
    let length = json.list.length;
    let num = 4;
    if (jifen) {
      num = length < num ? length : 3;
    } else if (length < num) {
      num = length;
    }
    // console.log(dataList, '----', dataList[0].full_money, '========', num)
    // 因为数组有时穿过来下标不连续 不能用for来写 但是上面的num有点忘记存在的意义了 下面的 for in 可能使上面的失效 num应该是 显示个数 这样可以显示积分优惠券吧 担是现在好像没有了
    // for (let i = 0; i < num; i++) {
    //   let fullMoney = dataList[i].full_money
    //   list.push(
    //     '满 ' +
    //       parseInt(fullMoney) +
    //       ' 减 ' +
    //       parseInt(dataList[i].amount) +
    //       ' 元 ' +
    //       dataList[i].title
    //   );
    // }

    for (let i in dataList) {
      let fullMoney = dataList[i].full_money
      list.push(
        '满 ' +
          parseInt(fullMoney) +
          ' 减 ' +
          parseInt(dataList[i].amount) +
          ' 元 ' +
          dataList[i].title
      );
    }

    this.coupons = {...this.coupons, length: Object.keys(this.coupons).length}
    // console.log(this.coupons, '......+++++++++......')
    if (jifen) {
      list.push('满100积分减5元 积分优惠券');
    }
    list.push('不使用优惠券');
    that.couponItems = list;
    that.$apply();
    // that.showLoading = false;
  }
  // 使用优惠券
  useVoucher(id) {
    if (id < this.coupons.length) {
      let receive = parseInt(this.coupons[id].amount);
      this.actualPrice = (this.totalPrice - receive).toFixed(2);
      this.reduce = receive;
      this.voucheID = this.coupons[id].id;
      this.deduScore = 1;
    } else if (id - this.coupons.length == 0) {
      if (this.total_jf_num >= 100) {
        this.actualPrice = (this.totalPrice - 5).toFixed(2);
        this.reduce = 5;
        this.deduScore = 1;
      } else {
        this.actualPrice = this.totalPrice;
        this.deduScore = false;
      }
    } else if (id - this.coupons.length == 1) {
      this.actualPrice = this.totalPrice;
      this.deduScore = false;
    }
    this.$apply();
  }
  methods = {
    // 打开级联
    onOpen() {
      this.showCascader = true;
    },
    // 关闭级联
    onClose(e) {
      this.showCascader = false;
    },
    onChange(e) {
      let v = e.detail.value;
      if (v.length > 1) {
        this.currentShop = v[1];
      }
      // console.log('onChange1', e.detail);
    },
    async createProductOrderByXX(e) {
      if (!this.is_exit_address) {
        await tip.confirm('你未设置收货地址，请设置地址');
        await this.addWechatAddressSync();
        return false;
      }
      this.createProductOrderBy(e);
    },
    chooseShop(e) {
      this.currentShop = this.shops[e.detail.value].name;
      this.kuaidi_name = this.shops[e.detail.value].name;
    },
    // 选择要使用的优惠券
    async selectCoupon() {
      let that = this;
      // 加上这个就是同步的了 要不这里会获取不到数组
      wx.showActionSheet({
        itemColor: '#FF0077',
        itemList: this.couponItems,
        success: function(res) {
          that.useVoucher(res.tapIndex);
        },
        fail: function(res) {
          console.log(res.errMsg);
        }
      });
    },
    // 这是原本的积分优惠券
    useCoupon(e) {
      if (e.detail.value) {
        this.actualPrice = (this.actualPrice - 5).toFixed(2);
      } else {
        this.actualPrice = this.totalPrice;
      }
      this.deduScore = e.detail.value;
    },
    // 买家留言
    bindKeyInput(e) {
      this.sellerMessage = e.detail.value;
    },
    // 去支付
    async goPay(e) {
      this.paytype = e;
      if (!this.is_exit_address) {
        await tip.confirm('你未设置收货地址，请设置地址');
        this.addWechatAddressSync();
        return false;
      }
      // 这个是为了查看支付成功页面做的
      // wepy.navigateTo({
      //   url: '/pages/shop_cart/pay_success?orderNo=2746'
      // });
      this.goToPay();
    },
    // 设置收货地址
    setAddress() {
      wepy.navigateTo({
        url: '/pages/address?type=order'
      });
    }
  };
  events = {};
}
</script>

<style lang="scss">
.bottom-left {
  padding: 30rpx;
  float: left;
  color: #666;
}
.to-pay-btn {
  width: 180rpx;
  text-align: center;
  line-height: 62rpx;
  background-color: #ff0077;
  font-size: 30rpx;
  color: #ffffff;
}
.spacing5 {
  height: 120rpx;
  width: 100%;
  overflow: hidden;
  background-color: #f5f5f5;
}
.comfire_order {
  margin-bottom: -50px;
}
.footer {
  position: fixed;
  left: 0px;
  bottom: 0px;
  width: 100%;
  z-index: 9;
}
.desc-highlight {
  font-size: 24rpx;
  height: 38rpx;
  padding: 0 22rpx;
  border: 1px solid #f5342f;
  border-radius: 20rpx;
  color: #f5342f;
  line-height: 38rpx; //  margin-right: 140rpx;
  margin-right: 180rpx;
}
.shopIcon {
  color: #9a9a9a;
  font-size: 20px;
}
.goodsList {
  margin-top: 90rpx;
}
.goodsList1 {
  margin-top: 130rpx;
}
.content {
  padding: 20rpx;
  float: right;
}
.content1 {
  padding: 20rpx;
}
.totalPrice {
  color: #ff0077;
}
.address {
  border-top: 1px solid #efefef;
  background: #fff;
  .empty_address,
  .address_info {
    display: flex;
    justify-content: space-between;
    height: 103rpx;
    align-items: center;
    padding: 0rpx 35rpx; // ******间隔******/
    .title {
      color: #000;
    }
    .arrow {
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
  .address_info {
    height: 150rpx;
  }
}
.order_info {
  .block {
    display: flex;
    justify-content: space-between;
    height: 91rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    border-bottom: 1px solid #efefef;
    background: #fff;
    .txt {
      font-size: 32rpx;
    }
    .left {
      color: #000;
    }
    .right {
      color: #9a9a9a;
      text-align: right;
    }
    .price {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .tongji {
      font-size: 32rpx;
    }
    .input_box {
      flex: 1;
      margin-left: 20rpx;
    }
    .total_jf {
      font-size: 32rpx;
    }
  }
}
.list_box {
  height: 250rpx;
}
.goods-info {
  border-bottom: 1px solid #eee;
  display: flex;
  padding: 20rpx;
  box-sizing: border-box;
  position: relative;
  background: #fff;
}
.goods-info .img-box {
  width: 160rpx;
  height: 160rpx;
  overflow: hidden;
  margin-right: 28rpx;
  background-color: #d8d8d8;
}
.goods-info .text-box {
  width: 480rpx;
}
.goods-info .text-box .goods-title {
  font-size: 28rpx;
  color: #414141;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 10rpx 20rpx 5rpx 0;
}
.goods-info .text-box .goods-label {
  font-size: 26rpx;
  color: #999;
  height: 38rpx;
  line-height: 38rpx;
  margin: 8rpx 0 25rpx 0;
}
.goods-info .text-box .goods-price {
  font-size: 34rpx;
  color: #e64340;
}
.goods-info .text-box .buy-num {
  width: 164rpx;
  height: 48rpx;
  line-height: 48rpx;
  position: absolute;
  right: 30rpx;
  bottom: 30rpx;
  display: flex;
  font-size: 24rpx;
  text-align: center;
}
.goods-info .text-box .buy-num .jian-btn {
  width: 48rpx;
  height: 100%;
  border-left: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-left-radius: 6rpx;
  border-top-left-radius: 6rpx;
}
.goods-info .text-box .buy-num .jian-btn.disabled {
  background-color: #f5f5f9;
  border-left: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}
.goods-info .text-box .buy-num .jia-btn {
  width: 48rpx;
  height: 100%;
  border-right: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-right-radius: 6rpx;
  border-top-right-radius: 6rpx;
}
.goods-info .text-box .buy-num .jia-btn.disabled {
  background-color: #f5f5f9;
  border-right: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}
.goods-info .text-box .buy-num input {
  width: 68rpx;
  height: 48rpx;
  min-height: 48rpx;
  text-align: center;
  font-size: 24rpx;
  border: 1rpx solid #ccc;
}
.goods-info .img-box .img {
  width: 160rpx;
  height: 160rpx;
}
.pay_box {
  margin-top: 104rpx;
  padding: 0 22rpx;
}
.dk-jf {
  text-align: right;
  color: #666;
}
.address-name-phone {
  margin-bottom: 20rpx;
  font-size: 11pt;
  font-weight: 900;
}
.address-name {
  margin-right: 20rpx;
}
</style>
